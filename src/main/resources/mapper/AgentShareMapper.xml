<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.axcc.dao.AgentShareDao">
  <resultMap id="BaseResultMap" type="com.axcc.model.AgentShare">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="agent_id" jdbcType="INTEGER" property="agentId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="business_id" jdbcType="INTEGER" property="businessId" />
    <result column="agent_money" jdbcType="REAL" property="agentMoney" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="apply_status" jdbcType="INTEGER" property="applyStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    id, agent_id, user_id, business_id, agent_money, create_date, apply_status
  </sql>
  <select id="getAgentShareById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List"/>
    from agent_share
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getAgentShareByBean" parameterType="com.axcc.model.AgentShare" resultMap="BaseResultMap">
    select id, agent_id, user_id, business_id, agent_money, create_date, apply_status
    from agent_share
    <where>
      <if test="agentId != null">
        and agent_id = #{agentId,jdbcType=INTEGER}
      </if>
      <if test="userId != null">
        and user_id = #{userId,jdbcType=INTEGER}
      </if>
      <if test="businessId != null">
        and business_id = #{businessId,jdbcType=INTEGER}
      </if>
      <if test="agentMoney != null">
        and agent_money = #{agentMoney,jdbcType=REAL}
      </if>
      <if test="createDate != null">
        and create_date = #{createDate,jdbcType=TIMESTAMP}
      </if>
      <if test="applyStatus != null">
        and apply_status = #{applyStatus,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  <select id="listAgentShareByBean" parameterType="com.axcc.model.AgentShare" resultMap="BaseResultMap">
    select id,agent_id,user_id,business_id,agent_money,create_date
    from agent_share
    <where>
        <if test="agentId != null">
          and agent_id = #{agentId,jdbcType=INTEGER}
        </if>
        <if test="userId != null">
          and user_id = #{userId,jdbcType=INTEGER}
        </if>
        <if test="businessId != null">
          and business_id = #{businessId,jdbcType=INTEGER}
        </if>
        <if test="agentMoney != null">
          and agent_money = #{agentMoney,jdbcType=REAL}
        </if>
        <if test="createDate != null">
          and create_date = #{createDate,jdbcType=TIMESTAMP}
        </if>
        <if test="applyStatus != null">
          and apply_status = #{applyStatus,jdbcType=INTEGER}
        </if>
    </where>
  </select>
  <select id="countAgentShareByBean" parameterType="com.axcc.model.AgentShare" resultType="java.lang.Integer">
    select count(id) from agent_share
    <where>
        <if test="agentId != null">
          and agent_id = #{agentId,jdbcType=INTEGER}
        </if>
        <if test="userId != null">
          and user_id = #{userId,jdbcType=INTEGER}
        </if>
        <if test="businessId != null">
          and business_id = #{businessId,jdbcType=INTEGER}
        </if>
        <if test="agentMoney != null">
            and agent_money = #{agentMoney,jdbcType=REAL}
        </if>
        <if test="createDate != null">
            and create_date = #{createDate,jdbcType=TIMESTAMP}
        </if>
        <if test="applyStatus != null">
          and apply_status = #{applyStatus,jdbcType=INTEGER}
        </if>
    </where>
  </select>
  <insert id="insertAgentShareByBean" parameterType="com.axcc.model.AgentShare">
    insert into agent_share (id, user_id, agent_id, business_id, agent_money, create_date, apply_status)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},#{agentId,jdbcType=INTEGER},
      #{businessId,jdbcType=INTEGER}, #{agentMoney,jdbcType=REAL}, #{createDate,jdbcType=TIMESTAMP}, #{applyStatus,jdbcType=INTEGER})
  </insert>
  <update id="updateAgentShareForBean" parameterType="com.axcc.model.AgentShare">
    update agent_share
    <set>
      <if test="agentId != null">
        agent_id = #{agentId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="businessId != null">
        business_id = #{businessId,jdbcType=INTEGER},
      </if>
      <if test="agentMoney != null">
        agent_money = #{agentMoney,jdbcType=REAL},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="applyStatus != null">
        apply_status = #{applyStatus,jdbcType=INTEGER}
      </if>
    </set>
    where id=#{id,jdbcType=INTEGER}
  </update>
  <update id="updateAgentShareByAgentId" parameterType="com.axcc.model.AgentShare">
    update agent_share
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="businessId != null">
        business_id = #{businessId,jdbcType=INTEGER},
      </if>
      <if test="agentMoney != null">
        agent_money = #{agentMoney,jdbcType=REAL},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="applyStatus != null">
        apply_status = #{applyStatus,jdbcType=INTEGER}
      </if>
    </set>
    where agent_id=#{agentId,jdbcType=INTEGER} AND apply_status = 0 AND period_diff(date_format(now(),'%Y%m'), date_format(create_date,'%Y%m')) = 1
  </update>
  <select id="sumAgentShareMoney" parameterType="java.lang.Integer" resultType="Map">
    SELECT IF(SUM(agent_money) IS NULL, 0, SUM(agent_money)) * 0.05 AS sumMoney
    FROM agent_share
    WHERE agent_id = #{agentId,jdbcType=INTEGER} AND apply_status = 0 AND period_diff(date_format(now(),'%Y%m'), date_format(create_date,'%Y%m')) = 1
  </select>
  <select id="sumAgentMoney" parameterType="java.lang.Integer" resultType="Map">
    SELECT IF(SUM(agent_money) IS NULL, 0, SUM(agent_money)) * 0.05 AS sumMoney
    FROM agent_share
    WHERE agent_id = #{agentId,jdbcType=INTEGER} AND apply_status = 0 AND period_diff(date_format(now(),'%Y%m'), date_format(create_date,'%Y%m')) = 1
  </select>
  <select id="listAgentShareByAgentId" parameterType="java.lang.Integer" resultType="Map">
    SELECT
	  A.id id,
      A.agent_id agentId,
      IF (A.agent_money IS NULL, 0, A.agent_money) * 0.05 AS agentMoney,
      B.login_name agentName,
      A.user_id userId,
      C.login_name userName,
      DATE_FORMAT(
          A.create_date,
          '%Y-%m-%d %H:%i:%s'
      ) createTime,
      A.apply_status applyStatus
    FROM
	  agent_share A
    INNER JOIN users B ON A.agent_id = B.id
    INNER JOIN users C ON A.user_id = C.id
    WHERE A.agent_id = #{agentId,jdbcType=INTEGER} AND period_diff(date_format(now(),'%Y%m'), date_format(A.create_date,'%Y%m')) = 1
    ORDER BY
      A.apply_status ASC,
      A.create_date DESC
  </select>
  <select id="countAgentShareByAgentId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    SELECT
    count(1)
    FROM
	  agent_share A
    INNER JOIN users B ON A.agent_id = B.id
    INNER JOIN users C ON A.user_id = C.id
    WHERE A.agent_id = #{agentId,jdbcType=INTEGER} AND period_diff(date_format(now(),'%Y%m'), date_format(A.create_date,'%Y%m')) = 1
  </select>
</mapper>